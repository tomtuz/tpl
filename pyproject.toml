[tool.poetry]
name = "tpl"
version = "0.1.0"
description = "A CLI tool for project templating and management"
authors = ["tomtuz"]
readme = "README.md"
packages = [{include = "src"}, {include = "definitions.py"}]
include = [
  "src/file_index/**/*",
  "src/templates/**/*",
  "definitions.py",
]
classifiers = [
    "Private :: Do Not Upload",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.11"
cryptography = "^43.0.1"
typer = "^0.9.0"
questionary = "^2.0.1"
pyyaml = "^6.0"
rich = "^13.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.6.3"
pre-commit = "^4.0.1"
mypy = "^1.11.2"

[tool.poetry.scripts]
tpl = "src.main:app"
build = "scripts.build:main"

# CLI main
install = "dev.cmd:install"
test = "dev.cmd:test"
refresh = "dev.cmd:refresh"
typecheck = "dev.cmd:typecheck"

# CLI lint / format
lint = "dev.cmd:lint"
lintF = "dev.cmd:lintF"
format = "dev.cmd:format"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
show-fixes = true
line-length = 120
src = ["src", "dev"]
output-format = "full"
target-version = "py311"

[tool.ruff.lint]
select = [
  "E", # pycodestyle error
  "F", # pyflakes
  "I", # isort
  "B"  # flake8-bugbear
]

# "B",  # flake8-bugbear
# "E",  # pycodestyle error
# "F",  # pyflakes
# "I",  # isort
# "UP", # pyupgrade
# "W",  # pycodestyle warning

ignore = [
  "E501",  # Line length
  "B008",  # Naming convention
  "B904",  # Assert in non-test
  "UP007"  # Unused variable
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Unused import

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
